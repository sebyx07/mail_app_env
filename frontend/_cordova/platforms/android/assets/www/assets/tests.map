{"version":3,"sources":["mail-app/tests/adapters/application.jshint.js","mail-app/tests/app.jshint.js","mail-app/tests/components/email/new-form.jshint.js","mail-app/tests/components/inbox/emails-list.jshint.js","mail-app/tests/components/login/login-form.jshint.js","mail-app/tests/components/page/nav-bar.jshint.js","mail-app/tests/components/page/side-nav.jshint.js","mail-app/tests/electron.js","mail-app/tests/electron.jshint.js","mail-app/tests/helpers/destroy-app.js","mail-app/tests/helpers/destroy-app.jshint.js","mail-app/tests/helpers/module-for-acceptance.js","mail-app/tests/helpers/module-for-acceptance.jshint.js","mail-app/tests/helpers/resolver.js","mail-app/tests/helpers/resolver.jshint.js","mail-app/tests/helpers/start-app.js","mail-app/tests/helpers/start-app.jshint.js","mail-app/tests/integration/components/email/new-form-test.js","mail-app/tests/integration/components/email/new-form-test.jshint.js","mail-app/tests/integration/components/inbox/emails-list-test.js","mail-app/tests/integration/components/inbox/emails-list-test.jshint.js","mail-app/tests/integration/components/login/login-form-test.js","mail-app/tests/integration/components/login/login-form-test.jshint.js","mail-app/tests/integration/components/page/nav-bar-test.js","mail-app/tests/integration/components/page/nav-bar-test.jshint.js","mail-app/tests/integration/components/page/side-nav-test.js","mail-app/tests/integration/components/page/side-nav-test.jshint.js","mail-app/tests/models/email.jshint.js","mail-app/tests/models/user.jshint.js","mail-app/tests/resolver.jshint.js","mail-app/tests/router.jshint.js","mail-app/tests/routes/application.jshint.js","mail-app/tests/routes/login.jshint.js","mail-app/tests/routes/mailbox/inbox.jshint.js","mail-app/tests/routes/mailbox/new.jshint.js","mail-app/tests/routes/mailbox.jshint.js","mail-app/tests/test-helper.js","mail-app/tests/test-helper.jshint.js","mail-app/tests/transforms/moment.jshint.js","mail-app/tests/unit/adapters/application-test.js","mail-app/tests/unit/adapters/application-test.jshint.js","mail-app/tests/unit/models/email-test.js","mail-app/tests/unit/models/email-test.jshint.js","mail-app/tests/unit/models/user-test.js","mail-app/tests/unit/models/user-test.jshint.js","mail-app/tests/unit/routes/application-test.js","mail-app/tests/unit/routes/application-test.jshint.js","mail-app/tests/unit/routes/login-test.js","mail-app/tests/unit/routes/login-test.jshint.js","mail-app/tests/unit/routes/mailbox/inbox-test.js","mail-app/tests/unit/routes/mailbox/inbox-test.jshint.js","mail-app/tests/unit/routes/mailbox/new-test.js","mail-app/tests/unit/routes/mailbox/new-test.jshint.js","mail-app/tests/unit/routes/mailbox-test.js","mail-app/tests/unit/routes/mailbox-test.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('mail-app/tests/adapters/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | adapters/application.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('adapters/application.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('mail-app/tests/components/email/new-form.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | components/email/new-form.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('components/email/new-form.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/components/inbox/emails-list.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | components/inbox/emails-list.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('components/inbox/emails-list.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/components/login/login-form.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | components/login/login-form.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('components/login/login-form.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/components/page/nav-bar.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | components/page/nav-bar.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('components/page/nav-bar.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/components/page/side-nav.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | components/page/side-nav.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('components/page/side-nav.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/electron', ['exports'], function (exports) {\n    /* jshint undef: false */\n\n    var _require = require('electron');\n\n    var BrowserWindow = _require.BrowserWindow;\n    var app = _require.app;\n\n    var mainWindow = null;\n\n    app.on('window-all-closed', function onWindowAllClosed() {\n        if (process.platform !== 'darwin') {\n            app.quit();\n        }\n    });\n\n    app.on('ready', function onReady() {\n        mainWindow = new BrowserWindow({\n            width: 800,\n            height: 600\n        });\n\n        delete mainWindow.module;\n\n        if (process.env.EMBER_ENV === 'test') {\n            mainWindow.loadURL('file://' + __dirname + '/index.html');\n        } else {\n            mainWindow.loadURL('file://' + __dirname + '/dist/index.html');\n        }\n\n        mainWindow.on('closed', function onClosed() {\n            mainWindow = null;\n        });\n    });\n\n    /* jshint undef: true */\n});","define('mail-app/tests/electron.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | electron.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('electron.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('mail-app/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | helpers/destroy-app.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('helpers/destroy-app.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'ember', 'mail-app/tests/helpers/start-app', 'mail-app/tests/helpers/destroy-app'], function (exports, _qunit, _ember, _mailAppTestsHelpersStartApp, _mailAppTestsHelpersDestroyApp) {\n  var Promise = _ember['default'].RSVP.Promise;\n\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _mailAppTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Promise.resolve(afterEach).then(function () {\n          return (0, _mailAppTestsHelpersDestroyApp['default'])(_this.application);\n        });\n      }\n    });\n  };\n});","define('mail-app/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | helpers/module-for-acceptance.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('helpers/module-for-acceptance.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/helpers/resolver', ['exports', 'mail-app/resolver', 'mail-app/config/environment'], function (exports, _mailAppResolver, _mailAppConfigEnvironment) {\n\n  var resolver = _mailAppResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _mailAppConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _mailAppConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('mail-app/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | helpers/resolver.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('helpers/resolver.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/helpers/start-app', ['exports', 'ember', 'mail-app/app', 'mail-app/config/environment'], function (exports, _ember, _mailAppApp, _mailAppConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _mailAppConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _mailAppApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('mail-app/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | helpers/start-app.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('helpers/start-app.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/integration/components/email/new-form-test', ['exports', 'chai', 'ember-mocha'], function (exports, _chai, _emberMocha) {\n\n  (0, _emberMocha.describeComponent)('email/new-form', 'Integration: EmailNewFormComponent', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#email/new-form}}\n      //     template content\n      //   {{/email/new-form}}\n      // `);\n\n      this.render(Ember.HTMLBars.template((function () {\n        return {\n          meta: {\n            'revision': 'Ember@2.7.0-beta.1',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 1,\n                'column': 0\n              },\n              'end': {\n                'line': 1,\n                'column': 18\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n            dom.insertBoundary(fragment, 0);\n            dom.insertBoundary(fragment, null);\n            return morphs;\n          },\n          statements: [['content', 'email/new-form', ['loc', [null, [1, 0], [1, 18]]]]],\n          locals: [],\n          templates: []\n        };\n      })()));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});\n/* jshint expr:true */","define('mail-app/tests/integration/components/email/new-form-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | integration/components/email/new-form-test.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('integration/components/email/new-form-test.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/integration/components/inbox/emails-list-test', ['exports', 'chai', 'ember-mocha'], function (exports, _chai, _emberMocha) {\n\n  (0, _emberMocha.describeComponent)('inbox/emails-list', 'Integration: InboxEmailsListComponent', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#inbox/emails-list}}\n      //     template content\n      //   {{/inbox/emails-list}}\n      // `);\n\n      this.render(Ember.HTMLBars.template((function () {\n        return {\n          meta: {\n            'revision': 'Ember@2.7.0-beta.1',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 1,\n                'column': 0\n              },\n              'end': {\n                'line': 1,\n                'column': 21\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n            dom.insertBoundary(fragment, 0);\n            dom.insertBoundary(fragment, null);\n            return morphs;\n          },\n          statements: [['content', 'inbox/emails-list', ['loc', [null, [1, 0], [1, 21]]]]],\n          locals: [],\n          templates: []\n        };\n      })()));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});\n/* jshint expr:true */","define('mail-app/tests/integration/components/inbox/emails-list-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | integration/components/inbox/emails-list-test.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('integration/components/inbox/emails-list-test.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/integration/components/login/login-form-test', ['exports', 'chai', 'ember-mocha'], function (exports, _chai, _emberMocha) {\n\n  (0, _emberMocha.describeComponent)('login/login-form', 'Integration: LoginLoginFormComponent', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#login/login-form}}\n      //     template content\n      //   {{/login/login-form}}\n      // `);\n\n      this.render(Ember.HTMLBars.template((function () {\n        return {\n          meta: {\n            'revision': 'Ember@2.7.0-beta.1',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 1,\n                'column': 0\n              },\n              'end': {\n                'line': 1,\n                'column': 20\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n            dom.insertBoundary(fragment, 0);\n            dom.insertBoundary(fragment, null);\n            return morphs;\n          },\n          statements: [['content', 'login/login-form', ['loc', [null, [1, 0], [1, 20]]]]],\n          locals: [],\n          templates: []\n        };\n      })()));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});\n/* jshint expr:true */","define('mail-app/tests/integration/components/login/login-form-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | integration/components/login/login-form-test.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('integration/components/login/login-form-test.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/integration/components/page/nav-bar-test', ['exports', 'chai', 'ember-mocha'], function (exports, _chai, _emberMocha) {\n\n  (0, _emberMocha.describeComponent)('page/nav-bar', 'Integration: PageNavBarComponent', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#page/nav-bar}}\n      //     template content\n      //   {{/page/nav-bar}}\n      // `);\n\n      this.render(Ember.HTMLBars.template((function () {\n        return {\n          meta: {\n            'revision': 'Ember@2.7.0-beta.1',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 1,\n                'column': 0\n              },\n              'end': {\n                'line': 1,\n                'column': 16\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n            dom.insertBoundary(fragment, 0);\n            dom.insertBoundary(fragment, null);\n            return morphs;\n          },\n          statements: [['content', 'page/nav-bar', ['loc', [null, [1, 0], [1, 16]]]]],\n          locals: [],\n          templates: []\n        };\n      })()));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});\n/* jshint expr:true */","define('mail-app/tests/integration/components/page/nav-bar-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | integration/components/page/nav-bar-test.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('integration/components/page/nav-bar-test.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/integration/components/page/side-nav-test', ['exports', 'chai', 'ember-mocha'], function (exports, _chai, _emberMocha) {\n\n  (0, _emberMocha.describeComponent)('page/side-nav', 'Integration: PageSideNavComponent', {\n    integration: true\n  }, function () {\n    (0, _emberMocha.it)('renders', function () {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      // Template block usage:\n      // this.render(hbs`\n      //   {{#page/side-nav}}\n      //     template content\n      //   {{/page/side-nav}}\n      // `);\n\n      this.render(Ember.HTMLBars.template((function () {\n        return {\n          meta: {\n            'revision': 'Ember@2.7.0-beta.1',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 1,\n                'column': 0\n              },\n              'end': {\n                'line': 1,\n                'column': 17\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n            dom.insertBoundary(fragment, 0);\n            dom.insertBoundary(fragment, null);\n            return morphs;\n          },\n          statements: [['content', 'page/side-nav', ['loc', [null, [1, 0], [1, 17]]]]],\n          locals: [],\n          templates: []\n        };\n      })()));\n      (0, _chai.expect)(this.$()).to.have.length(1);\n    });\n  });\n});\n/* jshint expr:true */","define('mail-app/tests/integration/components/page/side-nav-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | integration/components/page/side-nav-test.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('integration/components/page/side-nav-test.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/models/email.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | models/email.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('models/email.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/models/user.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | models/user.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('models/user.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass jshint.');\n  });\n});","define('mail-app/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | router.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('router.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/routes/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | routes/application.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('routes/application.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/routes/login.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | routes/login.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('routes/login.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/routes/mailbox/inbox.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | routes/mailbox/inbox.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('routes/mailbox/inbox.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/routes/mailbox/new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | routes/mailbox/new.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('routes/mailbox/new.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/routes/mailbox.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | routes/mailbox.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('routes/mailbox.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/test-helper', ['exports', 'mail-app/tests/helpers/resolver', 'ember-mocha'], function (exports, _mailAppTestsHelpersResolver, _emberMocha) {\n\n  (0, _emberMocha.setResolver)(_mailAppTestsHelpersResolver['default']);\n});","define('mail-app/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | test-helper.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('test-helper.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/transforms/moment.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | transforms/moment.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('transforms/moment.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/unit/adapters/application-test', ['exports', 'chai', 'ember-mocha'], function (exports, _chai, _emberMocha) {\n\n  (0, _emberMocha.describeModule)('adapter:application', 'Unit | Adapter | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  }, function () {\n    // Replace this with your real tests.\n    (0, _emberMocha.it)('exists', function () {\n      var adapter = this.subject();\n      (0, _chai.expect)(adapter).to.be.ok;\n    });\n  });\n});\n/* jshint expr:true */","define('mail-app/tests/unit/adapters/application-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | unit/adapters/application-test.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('unit/adapters/application-test.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/unit/models/email-test', ['exports', 'chai', 'ember-mocha'], function (exports, _chai, _emberMocha) {\n\n  (0, _emberMocha.describeModel)('email', 'Unit | Model | email', {\n    // Specify the other units that are required for this test.\n    needs: []\n  }, function () {\n    // Replace this with your real tests.\n    (0, _emberMocha.it)('exists', function () {\n      var model = this.subject();\n      // var store = this.store();\n      (0, _chai.expect)(model).to.be.ok;\n    });\n  });\n});\n/* jshint expr:true */","define('mail-app/tests/unit/models/email-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | unit/models/email-test.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('unit/models/email-test.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/unit/models/user-test', ['exports', 'chai', 'ember-mocha'], function (exports, _chai, _emberMocha) {\n\n  (0, _emberMocha.describeModel)('user', 'Unit | Model | user', {\n    // Specify the other units that are required for this test.\n    needs: []\n  }, function () {\n    // Replace this with your real tests.\n    (0, _emberMocha.it)('exists', function () {\n      var model = this.subject();\n      // var store = this.store();\n      (0, _chai.expect)(model).to.be.ok;\n    });\n  });\n});\n/* jshint expr:true */","define('mail-app/tests/unit/models/user-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | unit/models/user-test.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('unit/models/user-test.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/unit/routes/application-test', ['exports', 'chai', 'ember-mocha'], function (exports, _chai, _emberMocha) {\n\n  (0, _emberMocha.describeModule)('route:application', 'ApplicationRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  }, function () {\n    (0, _emberMocha.it)('exists', function () {\n      var route = this.subject();\n      (0, _chai.expect)(route).to.be.ok;\n    });\n  });\n});\n/* jshint expr:true */","define('mail-app/tests/unit/routes/application-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | unit/routes/application-test.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('unit/routes/application-test.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/unit/routes/login-test', ['exports', 'chai', 'ember-mocha'], function (exports, _chai, _emberMocha) {\n\n  (0, _emberMocha.describeModule)('route:login', 'LoginRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  }, function () {\n    (0, _emberMocha.it)('exists', function () {\n      var route = this.subject();\n      (0, _chai.expect)(route).to.be.ok;\n    });\n  });\n});\n/* jshint expr:true */","define('mail-app/tests/unit/routes/login-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | unit/routes/login-test.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('unit/routes/login-test.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/unit/routes/mailbox/inbox-test', ['exports', 'chai', 'ember-mocha'], function (exports, _chai, _emberMocha) {\n\n  (0, _emberMocha.describeModule)('route:mailbox/inbox', 'MailboxInboxRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  }, function () {\n    (0, _emberMocha.it)('exists', function () {\n      var route = this.subject();\n      (0, _chai.expect)(route).to.be.ok;\n    });\n  });\n});\n/* jshint expr:true */","define('mail-app/tests/unit/routes/mailbox/inbox-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | unit/routes/mailbox/inbox-test.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('unit/routes/mailbox/inbox-test.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/unit/routes/mailbox/new-test', ['exports', 'chai', 'ember-mocha'], function (exports, _chai, _emberMocha) {\n\n  (0, _emberMocha.describeModule)('route:mailbox/new', 'MailboxNewRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  }, function () {\n    (0, _emberMocha.it)('exists', function () {\n      var route = this.subject();\n      (0, _chai.expect)(route).to.be.ok;\n    });\n  });\n});\n/* jshint expr:true */","define('mail-app/tests/unit/routes/mailbox/new-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | unit/routes/mailbox/new-test.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('unit/routes/mailbox/new-test.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","define('mail-app/tests/unit/routes/mailbox-test', ['exports', 'chai', 'ember-mocha'], function (exports, _chai, _emberMocha) {\n\n  (0, _emberMocha.describeModule)('route:mailbox', 'MailboxRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  }, function () {\n    (0, _emberMocha.it)('exists', function () {\n      var route = this.subject();\n      (0, _chai.expect)(route).to.be.ok;\n    });\n  });\n});\n/* jshint expr:true */","define('mail-app/tests/unit/routes/mailbox-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint | unit/routes/mailbox-test.js', function () {\n    it('should pass jshint', function () {\n      if (!true) {\n        var error = new chai.AssertionError('unit/routes/mailbox-test.js should pass jshint.');\n        error.stack = undefined;throw error;\n      }\n    });\n  });\n});","/* jshint ignore:start */\n\nrequire('mail-app/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbfile":"tests.js"}